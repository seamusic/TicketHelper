using System;
using System.Collections.Generic;
using System.Text;
using System.Collections;
using System.Drawing;
using System.Runtime.InteropServices;

namespace TicketHelper.Core
{
    internal class b_c
    {
        private char a_char;
        private int[,] b_int;
        private List<uint> c_list;
        private List<uint> d_list;
        private int e_int;
        private int f_int;

        public b_c(int[,] A_0)
        {
            this.c(A_0);
        }

        public b_c(char A_0, int[,] A_1)
            : this(A_1)
        {
            this.a_char = A_0;
        }

        public List<uint> a()
        {
            return this.c_list;
        }

        public void a(char A_0)
        {
            this.a_char = A_0;
        }

        private List<uint> a(int[,] A_0)
        {
            List<uint> list = new List<uint>();
            for (int i = 0; i < A_0.GetLength(0); i++)
            {
                list.Add(0);
                for (int j = 0; j < A_0.GetLength(1); j++)
                {
                    List<uint> list2;
                    int num3;
                    (list2 = list)[num3 = i] = list2[num3] + (Convert.ToUInt32(A_0[i, j].ToString()) * ((uint)Math.Pow(2.0, (double)((A_0.GetLength(1) - 1) - j))));
                }
            }
            return list;
        }

        public void a(List<uint> A_0)
        {
            this.c_list = A_0;
        }

        public void a(int A_0)
        {
            this.e_int = A_0;
        }

        public char b()
        {
            return this.a_char;
        }

        public void b(List<uint> A_0)
        {
            this.d_list = A_0;
        }

        private List<uint> b(int[,] A_0)
        {
            List<uint> list = new List<uint>();
            for (int i = 0; i < A_0.GetLength(1); i++)
            {
                list.Add(0);
                for (int j = 0; j < A_0.GetLength(0); j++)
                {
                    List<uint> list2;
                    int num3;
                    (list2 = list)[num3 = i] = list2[num3] + (Convert.ToUInt32(A_0[j, i]) * ((uint)Math.Pow(2.0, (double)((A_0.GetLength(0) - 1) - j))));
                    if (A_0[j, i] == 1)
                    {
                        this.f_int++;
                    }
                }
            }
            return list;
        }

        public int c()
        {
            return this.b_int.GetLength(0);
        }

        private void c(int[,] A_0)
        {
            this.b_int = A_0;
            this.d_list = new List<uint>();
            this.d_list = this.a(A_0);
            this.c_list = new List<uint>();
            this.c_list = this.b(A_0);
        }

        public int d()
        {
            return this.b_int.GetLength(1);
        }

        public List<uint> e()
        {
            return this.d_list;
        }

        public int f()
        {
            return this.e_int;
        }

        public int g()
        {
            return this.f_int;
        }
    }
    internal class g_c : IComparable
    {
        private char a_char;
        private int b_int;
        private float c_float;
        private int d_int;
        private float e_float;

        public g_c(char A_0, int A_1, float A_2, int A_3)
        {
            this.a_char = A_0;
            this.b_int = A_1;
            this.e_float = A_2;
            this.d_int = A_3;
        }

        public int a()
        {
            return this.d_int;
        }

        public void a(char A_0)
        {
            this.a_char = A_0;
        }

        public void a(int A_0)
        {
            this.c_float = A_0;
        }

        public void a(float A_0)
        {
            this.e_float = A_0;
        }

        public char b()
        {
            return this.a_char;
        }

        public void b(int A_0)
        {
            this.b_int = A_0;
        }

        public float c()
        {
            return this.c_float;
        }

        public int CompareTo(object obj)
        {
            g_c g = (g_c)obj;
            if (this.e() < g.e())
            {
                return 1;
            }
            if (this.e() == g.e())
            {
                return 0;
            }
            return -1;
        }

        public int d()
        {
            return this.b_int;
        }

        public float e()
        {
            return this.e_float;
        }
    }
    internal class CheckCode02
    {
        private static string a(List<g_c> A_0)
        {
            StringBuilder builder = new StringBuilder();
            A_0.Sort();
            SortedList list = new SortedList();
            for (int i = 0; i < 4; i++)
            {
                if (A_0.Count < 4)
                {
                    return "";
                }
                list.Add(A_0[i].d(), A_0[i]);
                for (int j = i + 1; j < A_0.Count; j++)
                {
                    if (Math.Abs((int)(A_0[i].d() - A_0[j].d())) < 3)
                    {
                        if (((g_c)list[A_0[i].d()]).a() < A_0[j].a())
                        {
                            list[A_0[i].d()] = A_0[j];
                        }
                        A_0.RemoveAt(j);
                        j--;
                    }
                }
            }
            foreach (DictionaryEntry entry in list)
            {
                builder.Append(((g_c)entry.Value).b());
            }
            return builder.ToString();
        }

        private static char a(b_c[] A_0)
        {
            int index = 0;
            int num2 = 0x2710;
            for (int i = 0; i < A_0.Length; i++)
            {
                if (num2 > A_0[i].f())
                {
                    num2 = A_0[i].f();
                    index = i;
                }
            }
            return A_0[index].b();
        }

        private static int a(uint A_0)
        {
            int num = 0;
            while (num < A_0)
            {
                num++;
                A_0 &= A_0 - 1;
            }
            return num;
        }

        private static Bitmap a(int[,] A_0)
        {
            Bitmap bitmap = new Bitmap(A_0.GetLength(1), A_0.GetLength(0));
            for (int i = 0; i < A_0.GetLength(0); i++)
            {
                for (int j = 0; j < A_0.GetLength(1); j++)
                {
                    if (A_0[i, j] == 0)
                    {
                        A_0[i, j] = 0xff;
                    }
                    else
                    {
                        A_0[i, j] = 0;
                    }
                    bitmap.SetPixel(j, i, Color.FromArgb(A_0[i, j], A_0[i, j], A_0[i, j]));
                }
            }
            return bitmap;
        }

        private static int[,] a(Bitmap A_0)
        {
            int[,] numArray = new int[A_0.Height, A_0.Width];
            for (int i = 0; i < A_0.Height; i++)
            {
                for (int j = 0; j < A_0.Width; j++)
                {
                    if (170 < a(A_0.GetPixel(j, i)))
                    {
                        numArray[i, j] = 0;
                    }
                    else
                    {
                        numArray[i, j] = 1;
                    }
                }
            }
            return numArray;
        }

        private static int a(Color A_0)
        {
            return ((((A_0.R * 0x4c8b) + (A_0.G * 0x9645)) + (A_0.B * 0x1d30)) >> 0x10);
        }

        private static List<g_c> a(b_c A_0, b_c[] A_1)
        {
            List<g_c> list = new List<g_c>();
            for (int i = 0; i < A_1.Length; i++)
            {
                for (int j = 0; j <= (A_0.c() - 1); j++)
                {
                    int num3 = A_0.c() - ((A_1[i].c() / 2) + j);
                    for (int k = 0; k <= A_0.d(); k++)
                    {
                        int num5 = k - (A_1[i].d() / 2);
                        if (num5 < 0)
                        {
                            num5 = 0;
                        }
                        int num6 = ((A_1[i].d() + 1) / 2) + k;
                        if (num6 > A_0.d())
                        {
                            num6 = A_0.d();
                        }
                        int num8 = 0;
                        int num9 = 0;
                        int num7 = num5;
                        while (num7 < num6)
                        {
                            uint num10;
                            int num11 = (((A_1[i].d() / 2) - k) > 0) ? ((A_1[i].d() / 2) - k) : 0;
                            if (num3 > 0)
                            {
                                num10 = A_1[i].a()[(num11 + num7) - num5] << (num3 & 0x1f);
                            }
                            else
                            {
                                num10 = A_1[i].a()[(num11 + num7) - num5] >> ((num3 * -1) & 0x1f);
                            }
                            num10 &= ((uint)Math.Pow(2.0, (double)A_0.c())) - 1;
                            num8 += a(num10);
                            if (num8 == 0)
                            {
                                num9++;
                            }
                            if (((num10 & A_0.a()[num7]) ^ num10) != 0)
                            {
                                break;
                            }
                            num7++;
                        }
                        if ((num7 == num6) && (num8 != 0))
                        {
                            if (num3 > 0)
                            {
                                if ((A_1[i].c() + num3) < A_0.c())
                                {
                                    A_1[i].c();
                                }
                                else
                                {
                                    A_0.c();
                                }
                            }
                            else
                            {
                                A_1[i].c();
                            }
                            g_c item = new g_c(A_1[i].b(), num5 + num9, ((float)num8) / ((float)A_1[i].g()), A_1[i].g());
                            list.Add(item);
                        }
                    }
                }
            }
            return list;
        }

        public static string Read(Bitmap A_0)
        {
            b_c b = new b_c(a(A_0));
            b_c[] bArray = k_c.a_re();
            return a(a(b, bArray));
        }
    }
    internal class k_c
    {
        public const int a = 170;
        public const int b = 3;

        public static b_c[] a_re()
        {
            b_c[] bArray = new b_c[0x3e];
            int[,] numArray = new int[,] { { 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 } };
            bArray[0] = new b_c('2', numArray);
            numArray = new int[,] { { 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 } };
            bArray[1] = new b_c('3', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 0, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0 } };
            bArray[2] = new b_c('4', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 } };
            bArray[3] = new b_c('5', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 0 }, { 0, 0, 0, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 1, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 1, 1, 1, 0, 0, 0, 1, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 0, 0, 0 } };
            bArray[4] = new b_c('6', numArray);
            numArray = new int[,] { { 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[5] = new b_c('7', numArray);
            numArray = new int[,] { { 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 1, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0, 0, 0 } };
            bArray[6] = new b_c('8', numArray);
            numArray = new int[,] { { 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0, 0, 0 } };
            bArray[7] = new b_c('9', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 } };
            bArray[8] = new b_c('A', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 0, 0, 0 } };
            bArray[9] = new b_c('B', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 0, 0, 0, 0, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 0, 0, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 0, 0, 0 } };
            bArray[10] = new b_c('C', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 } };
            bArray[11] = new b_c('D', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 } };
            bArray[12] = new b_c('E', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[13] = new b_c('F', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1 }, { 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 } };
            bArray[14] = new b_c('G', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 } };
            bArray[15] = new b_c('H', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 1, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 0, 0, 0 }, { 1, 1, 1, 1, 0, 0, 0, 0 } };
            bArray[0x10] = new b_c('J', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 } };
            bArray[0x11] = new b_c('K', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1 }, { 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0 }, { 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 } };
            bArray[0x12] = new b_c('M', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 } };
            bArray[0x13] = new b_c('N', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[20] = new b_c('P', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 } };
            bArray[0x15] = new b_c('Q', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 } };
            bArray[0x16] = new b_c('R', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0, 0 }, { 0, 0, 0, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 0, 0, 0 } };
            bArray[0x17] = new b_c('S', numArray);
            numArray = new int[,] { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x18] = new b_c('T', numArray);
            numArray = new int[,] { { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 } };
            bArray[0x19] = new b_c('U', numArray);
            numArray = new int[,] { { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x1a] = new b_c('V', numArray);
            numArray = new int[,] { { 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0 }, { 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 } };
            bArray[0x1b] = new b_c('W', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 } };
            bArray[0x1c] = new b_c('X', numArray);
            numArray = new int[,] { { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 1, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x1d] = new b_c('Y', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 } };
            bArray[30] = new b_c('Z', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 } };
            bArray[0x1f] = new b_c('2', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 } };
            bArray[0x20] = new b_c('3', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 } };
            bArray[0x21] = new b_c('4', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x22] = new b_c('5', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x23] = new b_c('6', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x24] = new b_c('7', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x25] = new b_c('8', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x26] = new b_c('9', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1 } };
            bArray[0x27] = new b_c('A', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[40] = new b_c('B', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x29] = new b_c('C', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x2a] = new b_c('D', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 } };
            bArray[0x2b] = new b_c('E', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x2c] = new b_c('F', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x2d] = new b_c('G', numArray);
            numArray = new int[,] { { 
            0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 
            1, 1
         }, { 
            0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
            0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
            0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
            0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
            0, 0
         }, { 
            0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 
            0, 0
         }, { 
            0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
            0, 0
         }, { 
            0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 
            0, 0
         }, { 
            0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 
            0, 0
         }, { 
            0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 
            0, 0
         }, { 
            0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
            0, 0
         }, { 
            0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
            0, 0
         }, { 
            0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
            0, 0
         }, { 
            1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
            0, 0
         } };
            bArray[0x2e] = new b_c('H', numArray);
            numArray = new int[,] { 
            { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, 
            { 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
         };
            bArray[0x2f] = new b_c('J', numArray);
            numArray = new int[,] { { 
            0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 
            1
         }, { 
            0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
            0
         }, { 
            1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 
            0
         } };
            bArray[0x30] = new b_c('K', numArray);
            numArray = new int[,] { { 
            0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 1, 1, 1, 1
         }, { 
            0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
            1, 1, 1, 0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
            1, 1, 0, 0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 
            1, 1, 0, 0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 
            1, 1, 0, 0, 0
         }, { 
            0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 
            1, 0, 0, 0, 0
         }, { 
            0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 
            1, 0, 0, 0, 0
         }, { 
            0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 
            0, 0, 0, 0, 0
         }, { 
            0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 
            0, 0, 0, 0, 0
         }, { 
            0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 
            0, 0, 0, 0, 0
         }, { 
            0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 
            0, 0, 0, 0, 0
         }, { 
            0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 
            0, 0, 0, 0, 0
         }, { 
            0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
            0, 0, 0, 0, 0
         }, { 
            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
            0, 0, 0, 0, 0
         } };
            bArray[0x31] = new b_c('M', numArray);
            numArray = new int[,] { { 
            0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
            1, 1, 1, 1
         }, { 
            0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
            0, 1, 0, 0
         }, { 
            0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 
            1, 0, 0, 0
         }, { 
            0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
            1, 0, 0, 0
         }, { 
            0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
            1, 0, 0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 
            0, 0, 0, 0
         }, { 
            0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 
            0, 0, 0, 0
         }, { 
            0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 
            0, 0, 0, 0
         }, { 
            0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 
            0, 0, 0, 0
         }, { 
            0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 
            0, 0, 0, 0
         }, { 
            0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 
            0, 0, 0, 0
         }, { 
            0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 
            0, 0, 0, 0
         }, { 
            0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 
            0, 0, 0, 0
         }, { 
            1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
            0, 0, 0, 0
         } };
            bArray[50] = new b_c('N', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x33] = new b_c('P', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 } };
            bArray[0x34] = new b_c('Q', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0 } };
            bArray[0x35] = new b_c('R', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, { 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 } };
            bArray[0x36] = new b_c('S', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1 }, { 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x37] = new b_c('T', numArray);
            numArray = new int[,] { { 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x38] = new b_c('U', numArray);
            numArray = new int[,] { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[0x39] = new b_c('V', numArray);
            numArray = new int[,] { { 
            1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 
            1, 1, 1
         }, { 
            0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
            1, 0, 0
         }, { 
            0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 
            0, 0, 0
         }, { 
            0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 
            0, 0, 0
         }, { 
            0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 
            0, 0, 0
         }, { 
            0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 
            0, 0, 0
         }, { 
            0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 
            0, 0, 0
         }, { 
            0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 
            0, 0, 0
         }, { 
            1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 
            0, 0, 0
         }, { 
            1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 
            0, 0, 0
         }, { 
            1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
            0, 0, 0
         }, { 
            1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
            0, 0, 0
         }, { 
            1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 
            0, 0, 0
         }, { 
            1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0
         } };
            bArray[0x3a] = new b_c('W', numArray);
            numArray = new int[,] { { 
            0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 
            1
         }, { 
            0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 
            0
         }, { 
            0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 
            0
         }, { 
            1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
            0
         } };
            bArray[0x3b] = new b_c('X', numArray);
            numArray = new int[,] { { 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 } };
            bArray[60] = new b_c('Y', numArray);
            numArray = new int[,] { { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 } };
            bArray[0x3d] = new b_c('Z', numArray);
            return bArray;
        }

        [StructLayout(LayoutKind.Sequential, Size = 1)]
        public struct a_struct
        {
            public const int a = 0;
            public const int b = 1;
        }
    }
}
